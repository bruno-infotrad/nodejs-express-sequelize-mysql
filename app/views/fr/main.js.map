{"version":3,"file":"main.js","mappings":"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","sources":["fr.js","./src/app/_helpers/auth.interceptor.ts","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/components/add-org/add-org.component.ts","./src/app/components/add-org/add-org.component.html","./src/app/components/add-user/add-user.component.ts","./src/app/components/add-user/add-user.component.html","./src/app/components/board-admin/board-admin.component.ts","./src/app/components/board-admin/board-admin.component.html","./src/app/components/board-moderator/board-moderator.component.ts","./src/app/components/board-moderator/board-moderator.component.html","./src/app/components/board-user/board-user.component.ts","./src/app/components/board-user/board-user.component.html","./src/app/components/file-upload/file-upload.component.ts","./src/app/components/file-upload/file-upload.component.html","./src/app/components/home/home.component.ts","./src/app/components/home/home.component.html","./src/app/components/login/login.component.ts","./src/app/components/login/login.component.html","./src/app/components/org-details/org-details.component.ts","./src/app/components/org-details/org-details.component.html","./src/app/components/orgs-list/orgs-list.component.ts","./src/app/components/orgs-list/orgs-list.component.html","./src/app/components/profile/profile.component.ts","./src/app/components/profile/profile.component.html","./src/app/components/register/register.component.ts","./src/app/components/register/register.component.html","./src/app/components/user-details/user-details.component.ts","./src/app/components/user-details/user-details.component.html","./src/app/components/users-list/users-list.component.ts","./src/app/components/users-list/users-list.component.html","./src/app/services/appuser.service.ts","./src/app/services/auth.service.ts","./src/app/services/org.service.ts","./src/app/services/token-storage.service.ts","./src/app/services/user.service.ts","./src/environments/environment.ts","./src/main.ts"],"sourcesContent":["\"use strict\";(function(global){global.ng=global.ng||{};global.ng.common=global.ng.common||{};global.ng.common.locales=global.ng.common.locales||{};const u=undefined;function plural(val){const n=val,i=Math.floor(Math.abs(val)),v=val.toString().replace(/^[^.]*\\.?/,\"\").length,e=parseInt(val.toString().replace(/^[^e]*(e([-+]?\\d+))?/,\"$2\"))||0;if(i===0||i===1)return 1;if(e===0&&!(i===0)&&i%1000000===0&&v===0||!(e>=0&&e<=5))return 4;return 5}global.ng.common.locales[\"fr\"]=[\"fr\",[[\"AM\",\"PM\"],u,u],u,[[\"D\",\"L\",\"M\",\"M\",\"J\",\"V\",\"S\"],[\"dim.\",\"lun.\",\"mar.\",\"mer.\",\"jeu.\",\"ven.\",\"sam.\"],[\"dimanche\",\"lundi\",\"mardi\",\"mercredi\",\"jeudi\",\"vendredi\",\"samedi\"],[\"di\",\"lu\",\"ma\",\"me\",\"je\",\"ve\",\"sa\"]],u,[[\"J\",\"F\",\"M\",\"A\",\"M\",\"J\",\"J\",\"A\",\"S\",\"O\",\"N\",\"D\"],[\"janv.\",\"f\\xE9vr.\",\"mars\",\"avr.\",\"mai\",\"juin\",\"juil.\",\"ao\\xFBt\",\"sept.\",\"oct.\",\"nov.\",\"d\\xE9c.\"],[\"janvier\",\"f\\xE9vrier\",\"mars\",\"avril\",\"mai\",\"juin\",\"juillet\",\"ao\\xFBt\",\"septembre\",\"octobre\",\"novembre\",\"d\\xE9cembre\"]],u,[[\"av. J.-C.\",\"ap. J.-C.\"],u,[\"avant J\\xE9sus-Christ\",\"apr\\xE8s J\\xE9sus-Christ\"]],1,[6,0],[\"dd/MM/y\",\"d MMM y\",\"d MMMM y\",\"EEEE d MMMM y\"],[\"HH:mm\",\"HH:mm:ss\",\"HH:mm:ss z\",\"HH:mm:ss zzzz\"],[\"{1} {0}\",\"{1}, {0}\",\"{1} '\\xE0' {0}\",u],[\",\",\"\\u202F\",\";\",\"%\",\"+\",\"-\",\"E\",\"\\xD7\",\"\\u2030\",\"\\u221E\",\"NaN\",\":\"],[\"#,##0.###\",\"#,##0\\xA0%\",\"#,##0.00\\xA0\\xA4\",\"#E0\"],\"EUR\",\"\\u20AC\",\"euro\",{\"ARS\":[\"$AR\",\"$\"],\"AUD\":[\"$AU\",\"$\"],\"BEF\":[\"FB\"],\"BMD\":[\"$BM\",\"$\"],\"BND\":[\"$BN\",\"$\"],\"BZD\":[\"$BZ\",\"$\"],\"CAD\":[\"$CA\",\"$\"],\"CLP\":[\"$CL\",\"$\"],\"CNY\":[u,\"\\xA5\"],\"COP\":[\"$CO\",\"$\"],\"CYP\":[\"\\xA3CY\"],\"EGP\":[u,\"\\xA3E\"],\"FJD\":[\"$FJ\",\"$\"],\"FKP\":[\"\\xA3FK\",\"\\xA3\"],\"FRF\":[\"F\"],\"GBP\":[\"\\xA3GB\",\"\\xA3\"],\"GIP\":[\"\\xA3GI\",\"\\xA3\"],\"HKD\":[u,\"$\"],\"IEP\":[\"\\xA3IE\"],\"ILP\":[\"\\xA3IL\"],\"ITL\":[\"\\u20A4IT\"],\"JPY\":[u,\"\\xA5\"],\"KMF\":[u,\"FC\"],\"LBP\":[\"\\xA3LB\",\"\\xA3L\"],\"MTP\":[\"\\xA3MT\"],\"MXN\":[\"$MX\",\"$\"],\"NAD\":[\"$NA\",\"$\"],\"NIO\":[u,\"$C\"],\"NZD\":[\"$NZ\",\"$\"],\"PHP\":[u,\"\\u20B1\"],\"RHD\":[\"$RH\"],\"RON\":[u,\"L\"],\"RWF\":[u,\"FR\"],\"SBD\":[\"$SB\",\"$\"],\"SGD\":[\"$SG\",\"$\"],\"SRD\":[\"$SR\",\"$\"],\"TOP\":[u,\"$T\"],\"TTD\":[\"$TT\",\"$\"],\"TWD\":[u,\"NT$\"],\"USD\":[\"$US\",\"$\"],\"UYU\":[\"$UY\",\"$\"],\"WST\":[\"$WS\"],\"XCD\":[u,\"$\"],\"XPF\":[\"FCFP\"],\"ZMW\":[u,\"Kw\"]},\"ltr\",plural,[[[\"minuit\",\"midi\",\"mat.\",\"ap.m.\",\"soir\",\"nuit\"],u,[\"minuit\",\"midi\",\"du matin\",\"de l\\u2019apr\\xE8s-midi\",\"du soir\",\"du matin\"]],[[\"minuit\",\"midi\",\"mat.\",\"ap.m.\",\"soir\",\"nuit\"],u,[\"minuit\",\"midi\",\"matin\",\"apr\\xE8s-midi\",\"soir\",\"nuit\"]],[\"00:00\",\"12:00\",[\"04:00\",\"12:00\"],[\"12:00\",\"18:00\"],[\"18:00\",\"24:00\"],[\"00:00\",\"04:00\"]]]]})(typeof globalThis!==\"undefined\"&&globalThis||typeof global!==\"undefined\"&&global||typeof window!==\"undefined\"&&window);","import { HTTP_INTERCEPTORS, HttpEvent } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { HttpInterceptor, HttpHandler, HttpRequest } from '@angular/common/http';\n\nimport { TokenStorageService } from '../services/token-storage.service';\nimport { Observable } from 'rxjs';\n\n//const TOKEN_HEADER_KEY = 'Authorization';       // for Spring Boot back-end\nconst TOKEN_HEADER_KEY = 'x-access-token';   // for Node.js Express back-end\n\n@Injectable()\nexport class AuthInterceptor implements HttpInterceptor {\n  constructor(private token: TokenStorageService) { }\n\n  intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n    let authReq = req;\n    const token = this.token.getToken();\n    if (token != null) {\n      // for Spring Boot back-end\n      //authReq = req.clone({ headers: req.headers.set(TOKEN_HEADER_KEY, 'Bearer ' + token) });\n\n      // for Node.js Express back-end\n      authReq = req.clone({ headers: req.headers.set(TOKEN_HEADER_KEY, token) });\n    }\n    return next.handle(authReq);\n  }\n}\n\nexport const authInterceptorProviders = [\n  { provide: HTTP_INTERCEPTORS, useClass: AuthInterceptor, multi: true }\n];\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { UsersListComponent } from './components/users-list/users-list.component';\nimport { UserDetailsComponent } from './components/user-details/user-details.component';\nimport { AddUserComponent } from './components/add-user/add-user.component';\nimport { OrgsListComponent } from './components/orgs-list/orgs-list.component';\nimport { OrgDetailsComponent } from './components/org-details/org-details.component';\nimport { AddOrgComponent } from './components/add-org/add-org.component';\n\nimport { RegisterComponent } from './components/register/register.component';\nimport { LoginComponent } from './components/login/login.component';\nimport { HomeComponent } from './components/home/home.component';\nimport { ProfileComponent } from './components/profile/profile.component';\nimport { BoardUserComponent } from './components/board-user/board-user.component';\nimport { BoardModeratorComponent } from './components/board-moderator/board-moderator.component';\nimport { BoardAdminComponent } from './components/board-admin/board-admin.component';\n\nconst routes: Routes = [\n  { path: 'users', component: UsersListComponent },\n  { path: 'users/:id', component: UserDetailsComponent },\n  { path: 'adduser', component: AddUserComponent },\n  { path: 'orgs', component: OrgsListComponent },\n  { path: 'orgs/:id', component: OrgDetailsComponent },\n  { path: 'addorg', component: AddOrgComponent },\n  { path: 'home', component: HomeComponent },\n  { path: 'login', component: LoginComponent },\n  { path: 'register', component: RegisterComponent },\n  { path: 'profile', component: ProfileComponent },\n  { path: 'user', component: BoardUserComponent },\n  { path: 'mod', component: BoardModeratorComponent },\n  { path: 'admin', component: BoardAdminComponent },\n  { path: '', redirectTo: 'home', pathMatch: 'full' }\n];\n\n@NgModule({\n  //imports: [RouterModule.forRoot(routes, {useHash: true})],\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n\n","import { Component, OnInit } from '@angular/core';\nimport { TokenStorageService } from './services/token-storage.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit {\n  title = 'NTI';\n  private roles: string[] = [];\n  isLoggedIn = false;\n  showAdminBoard = false;\n  showModeratorBoard = false;\n  username?: string;\n\n  siteLanguage: string = 'English';\n  siteLocale: string = 'en';\n  languageList = [\n    { code: 'en', label: 'English' },\n    { code: 'fr', label: 'Français' },\n  ];\n\n  constructor(private tokenStorageService: TokenStorageService) { }\n\n  ngOnInit(): void {\n    this.siteLocale = window.location.pathname.split('/')[1]||'en';\n    console.log('siteLocal='+this.siteLocale);\n    this.siteLanguage = this.languageList.find(f => f.code === this.siteLocale)?.label||'English';\n    this.isLoggedIn = !!this.tokenStorageService.getToken();\n\n    if (this.isLoggedIn) {\n      const appuser = this.tokenStorageService.getAppuser();\n      this.roles = appuser.roles;\n\n      this.showAdminBoard = this.roles.includes('ROLE_ADMIN');\n      this.showModeratorBoard = this.roles.includes('ROLE_MODERATOR');\n\n      this.username = appuser.username;\n    }\n  }\n\n  logout(): void {\n    this.tokenStorageService.signOut();\n    window.location.reload();\n  }\n}\n","<div id=\"app\">\n  <nav class=\"navbar navbar-expand navbar-white bg-white\">\n    <img src=\"/assets/infotrad-petit.jpg\" alt=\"Info-TRAD\" class=\"navbar-brand\" />\n    <ul class=\"navbar-nav mr-auto\" routerLinkActive=\"active\">\n      <li class=\"nav-item\" *ngIf=\"isLoggedIn\">\n        <a i18n=\"@@home\" href=\"/users\" class=\"nav-link\" routerLink=\"users\">Home </a>\n      </li>\n      <li class=\"nav-item\" *ngIf=\"!isLoggedIn\">\n        <a i18n=\"@@home\" href=\"/home\" class=\"nav-link\" routerLink=\"home\">Home </a>\n      </li>\n      <li class=\"nav-item\" *ngIf=\"showAdminBoard\">\n        <a i18n=\"@@admin_screen\" href=\"/admin\" class=\"nav-link\" routerLink=\"admin\">Admin Board</a>\n      </li>\n      <li class=\"nav-item\" *ngIf=\"showModeratorBoard\">\n        <a i18n=\"@@moderator_screen\" href=\"/mod\" class=\"nav-link\" routerLink=\"mod\">Moderator Board</a>\n      </li>\n    </ul>\n\n    <ul class=\"navbar-nav ml-auto\" *ngIf=\"!isLoggedIn\">\n      <li class=\"nav-item\">\n        <a i18n=\"@@signup\" href=\"/register\" class=\"nav-link\" routerLink=\"register\">Sign Up</a>\n      </li>\n      <li class=\"nav-item\">\n        <a i18n=\"@@login\" href=\"/login\" class=\"nav-link\" routerLink=\"login\">Login</a>\n      </li>\n    </ul>\n\n    <ul class=\"navbar-nav ml-auto\" *ngIf=\"isLoggedIn\">\n      <li class=\"nav-item\">\n        <a i18n=\"@@profile\" href=\"/profile\" class=\"nav-link\" routerLink=\"profile\">{{ username }}</a>\n      </li>\n      <li class=\"nav-item\">\n        <a i18n=\"@@logout\" href class=\"nav-link\" (click)=\"logout()\">LogOut</a>\n      </li>\n    </ul>\n    <ng-container>\n        <mat-icon>language</mat-icon>\n        <button mat-button [matMenuTriggerFor]=\"menu\">\n            {{siteLanguage}}\n            <mat-icon>arrow_drop_down</mat-icon>\n        </button>\n        <mat-menu #menu=\"matMenu\">\n            <a mat-menu-item href=\"/en\">English</a>\n            <a mat-menu-item href=\"/fr\">Français</a>\n        </mat-menu>\n    </ng-container>\n  </nav>\n\n  <div class=\"container\">\n    <router-outlet></router-outlet>\n  </div>\n</div>\n","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { FormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { UserDetailsComponent } from './components/user-details/user-details.component';\nimport { FileUploadComponent } from './components/file-upload/file-upload.component';\nimport { UsersListComponent } from './components/users-list/users-list.component';\nimport { AddUserComponent } from './components/add-user/add-user.component';\nimport { OrgDetailsComponent } from './components/org-details/org-details.component';\nimport { OrgsListComponent } from './components/orgs-list/orgs-list.component';\nimport { AddOrgComponent } from './components/add-org/add-org.component';\nimport { LoginComponent } from './components/login/login.component';\nimport { RegisterComponent } from './components/register/register.component';\nimport { HomeComponent } from './components/home/home.component';\nimport { ProfileComponent } from './components/profile/profile.component';\nimport { BoardAdminComponent } from './components/board-admin/board-admin.component';\nimport { BoardModeratorComponent } from './components/board-moderator/board-moderator.component';\nimport { BoardUserComponent } from './components/board-user/board-user.component';\nimport { authInterceptorProviders } from './_helpers/auth.interceptor';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatProgressBarModule } from '@angular/material/progress-bar';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatRadioModule } from '@angular/material/radio';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    UserDetailsComponent,\n    FileUploadComponent,\n    UsersListComponent,\n    AddUserComponent,\n    OrgDetailsComponent,\n    OrgsListComponent,\n    AddOrgComponent,\n    LoginComponent,\n    RegisterComponent,\n    ProfileComponent,\n    BoardAdminComponent,\n    BoardModeratorComponent,\n    BoardUserComponent,\n    HomeComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    FormsModule,\n    HttpClientModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatIconModule,\n    MatProgressBarModule,\n    MatCardModule,\n    MatButtonModule,\n    MatToolbarModule,\n    MatSelectModule,\n    MatRadioModule,\n    MatMenuModule,\n    BrowserAnimationsModule,\n  ],\n  providers: [authInterceptorProviders],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { Org } from 'src/app/models/org.model';\nimport { OrgService } from 'src/app/services/org.service';\nimport { TokenStorageService } from 'src/app/services/token-storage.service';\n\n@Component({\n  selector: 'app-add-org',\n  templateUrl: './add-org.component.html',\n  styleUrls: ['./add-org.component.css']\n})\nexport class AddOrgComponent implements OnInit {\n  org: Org = {\n    orgid: '',\n    orgname: '',\n    description: '',\n  };\n  submitted = false;\n  private roles: string[] = [];\n  isLoggedIn = false;\n  showAddOrg = false;\n  username?: string;\n\n\n  constructor(private orgService: OrgService,private tokenStorageService: TokenStorageService) { }\n\n  ngOnInit(): void {\n    this.isLoggedIn = !!this.tokenStorageService.getToken();\n\n    if (this.isLoggedIn) {\n      const appuser = this.tokenStorageService.getAppuser();\n      this.roles = appuser.roles;\n      this.showAddOrg = this.roles.includes('ROLE_ADMIN');\n      this.username = appuser.username;\n    }\n  }\n\n  saveOrg(): void {\n    const data = {\n      orgid: this.org.orgid,\n      orgname: this.org.orgname,\n      description: this.org.description\n    };\n\n    this.orgService.create(data)\n      .subscribe(\n        response => {\n          console.log(response);\n          this.submitted = true;\n        },\n        error => {\n          console.log(error);\n        });\n  }\n\n  newOrg(): void {\n    this.submitted = false;\n    this.org = {\n      orgid: '',\n      orgname: '',\n      description: '',\n    };\n  }\n\n}\n","<div *ngIf=\"showAddOrg; else elseBlock\">\n  <div class=\"submit-form\">\n    <div *ngIf=\"!submitted\">\n      <div class=\"form-group\">\n        <label for=\"orgid\">Organization Id</label>\n        <input\n          type=\"text\"\n          class=\"form-control\"\n          id=\"orgid\"\n          required\n          [(ngModel)]=\"org.orgid\"\n          name=\"orgid\"\n        />\n      </div>\n\n      <div class=\"form-group\">\n        <label for=\"orgname\">Organization Name</label>\n        <input\n          type=\"text\"\n          class=\"form-control\"\n          id=\"orgname\"\n          required\n          [(ngModel)]=\"org.orgname\"\n          name=\"orgname\"\n        />\n      </div>\n\n      <div class=\"form-group\">\n        <label for=\"description\">Description</label>\n        <input\n          class=\"form-control\"\n          id=\"description\"\n          required\n          [(ngModel)]=\"org.description\"\n          name=\"description\"\n        />\n      </div>\n\n      <button (click)=\"saveOrg()\" class=\"btn btn-success\">Submit</button>\n    </div>\n\n    <div *ngIf=\"submitted\">\n      <h4>Organization was submitted successfully!</h4>\n      <button class=\"btn btn-success\" (click)=\"newOrg()\">Add</button>\n    </div>\n  </div>\n</div>\n<ng-template #elseBlock>Login as admin first</ng-template>\n","import { Component, OnInit } from '@angular/core';\nimport { User } from 'src/app/models/user.model';\nimport { UserService } from 'src/app/services/user.service';\nimport { OrgService } from 'src/app/services/org.service';\nimport { TokenStorageService } from 'src/app/services/token-storage.service';\nimport { Org } from '../../models/org.model';\n\n@Component({\n  selector: 'app-add-user',\n  templateUrl: './add-user.component.html',\n  styleUrls: ['./add-user.component.css']\n})\nexport class AddUserComponent implements OnInit {\n  user: User = {\n    username: '',\n    firstname: '',\n    lastname: '',\n    title: '',\n    description: '',\n    image: ''\n  };\n  org: Org[] = [];\n  submitted = false;\n  private roles: string[] = [];\n  isLoggedIn = false;\n  showAddUser = false;\n  username?: string;\n\n\n  constructor(private userService: UserService, private orgService: OrgService,private tokenStorageService: TokenStorageService) { }\n\n  ngOnInit(): void {\n    this.isLoggedIn = !!this.tokenStorageService.getToken();\n\n    if (this.isLoggedIn) {\n      const appuser = this.tokenStorageService.getAppuser();\n      this.roles = appuser.roles;\n      this.showAddUser = this.roles.includes('ROLE_ADMIN');\n      this.username = appuser.username;\n      this.retrieveOrgs();\n    }\n\n  }\n\n  saveUser(): void {\n    const data = {\n      username: this.user.username,\n      firstname: this.user.firstname,\n      lastname: this.user.lastname,\n      title: this.user.title,\n      description: this.user.description,\n      organization: this.user.organization\n    };\n\n    this.userService.create(data)\n      .subscribe(\n        response => {\n          console.log(response);\n          this.submitted = true;\n        },\n        error => {\n          console.log(error);\n        });\n  }\n\n  newUser(): void {\n    this.submitted = false;\n    this.user = {\n      username: '',\n      firstname: '',\n      lastname: '',\n      title: '',\n      description: '',\n      image: ''\n    };\n  }\n\n  retrieveOrgs(): void {\n    this.orgService.getAll()\n      .subscribe(\n        data=> {\n          this.org = data;\n          console.log(this.org);\n        },\n        error => {\n          console.log(error);\n        });\n  }\n\n}\n","<div *ngIf=\"showAddUser; else elseBlock\">\n  <div class=\"submit-form\">\n    <div *ngIf=\"!submitted\">\n      <div class=\"form-group\">\n        <label for=\"username\">User Name</label>\n        <input\n          type=\"text\"\n          class=\"form-control\"\n          id=\"username\"\n          required\n          [(ngModel)]=\"user.username\"\n          name=\"username\"\n        />\n      </div>\n\n      <div class=\"form-group\">\n        <label for=\"title\">First Name</label>\n        <input\n          type=\"text\"\n          class=\"form-control\"\n          id=\"firstname\"\n          required\n          [(ngModel)]=\"user.firstname\"\n          name=\"firstname\"\n        />\n      </div>\n\n      <div class=\"form-group\">\n        <label for=\"title\">Last Name</label>\n        <input\n          type=\"text\"\n          class=\"form-control\"\n          id=\"lastname\"\n          required\n          [(ngModel)]=\"user.lastname\"\n          name=\"lastname\"\n        />\n      </div>\n\n      <div class=\"form-group\">\n        <label for=\"title\">Title</label>\n        <input\n          type=\"text\"\n          class=\"form-control\"\n          id=\"title\"\n          required\n          [(ngModel)]=\"user.title\"\n          name=\"title\"\n        />\n      </div>\n\n      <div class=\"form-group\">\n        <label for=\"description\">Description</label>\n        <input\n          class=\"form-control\"\n          id=\"description\"\n          required\n          [(ngModel)]=\"user.description\"\n          name=\"description\"\n        />\n      </div>\n\n      <div class=\"form-group\">\n        <label for=\"org\">Organization Name</label>\n          <select class=\"form-control\" id=\"organization\" [(ngModel)]=\"user.organization\" name=\"organization\">\n            <option *ngFor=\"let orgs of org; let i = index\" [value]=\"org[i].id\">\n             {{org[i].orgname}}\n            </option>\n          </select>\n      </div>\n\n      <button (click)=\"saveUser()\" class=\"btn btn-success\">Submit</button>\n    </div>\n\n    <div *ngIf=\"submitted\">\n      <h4>User was submitted successfully!</h4>\n      <button class=\"btn btn-success\" (click)=\"newUser()\">Add</button>\n    </div>\n  </div>\n</div>\n<ng-template #elseBlock>Login as admin first</ng-template>\n","import { Component, OnInit } from '@angular/core';\nimport { AppuserService } from '../../services/appuser.service';\n\n@Component({\n  selector: 'app-board-admin',\n  templateUrl: './board-admin.component.html',\n  styleUrls: ['./board-admin.component.css']\n})\nexport class BoardAdminComponent implements OnInit {\n  content?: string;\n\n  constructor(private appuserService: AppuserService) { }\n\n  ngOnInit(): void {\n    this.appuserService.getAdminBoard().subscribe(\n      data => {\n        this.content = data;\n      },\n      err => {\n        this.content = JSON.parse(err.error).message;\n      }\n    );\n  }\n}\n","<div class=\"container\">\n  <header class=\"jumbotron\">\n    <p>{{ content }}</p>\n  </header>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { AppuserService } from '../../services/appuser.service';\n\n@Component({\n  selector: 'app-board-moderator',\n  templateUrl: './board-moderator.component.html',\n  styleUrls: ['./board-moderator.component.css']\n})\nexport class BoardModeratorComponent implements OnInit {\n  content?: string;\n\n  constructor(private appuserService: AppuserService) { }\n\n  ngOnInit(): void {\n    this.appuserService.getModeratorBoard().subscribe(\n      data => {\n        this.content = data;\n      },\n      err => {\n        this.content = JSON.parse(err.error).message;\n      }\n    );\n  }\n}\n","<div class=\"container\">\n  <header class=\"jumbotron\">\n    <p>{{ content }}</p>\n  </header>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { AppuserService } from '../../services/appuser.service';\n\n@Component({\n  selector: 'app-board-user',\n  templateUrl: './board-user.component.html',\n  styleUrls: ['./board-user.component.css']\n})\nexport class BoardUserComponent implements OnInit {\n  content?: string;\n\n  constructor(private appuserService: AppuserService) { }\n\n  ngOnInit(): void {\n    this.appuserService.getUserBoard().subscribe(\n      data => {\n        this.content = data;\n      },\n      err => {\n        this.content = JSON.parse(err.error).message;\n      }\n    );\n  }\n}\n","<div class=\"container\">\n  <header class=\"jumbotron\">\n    <p>{{ content }}</p>\n  </header>\n</div>\n","import { ActivatedRoute, Router } from '@angular/router';\nimport {Component, Input} from '@angular/core';\nimport {HttpClient, HttpEventType} from '@angular/common/http';\nimport {catchError, finalize} from 'rxjs/operators';\nimport {of} from 'rxjs';\nimport {AbstractControl, ControlValueAccessor, NG_VALIDATORS, NG_VALUE_ACCESSOR, ValidationErrors, Validator} from '@angular/forms';\n\n\n@Component({\n  selector: 'app-file-upload',\n  templateUrl: \"file-upload.component.html\",\n  styleUrls: [\"file-upload.component.css\"],\n  providers: [\n      {\n          provide: NG_VALUE_ACCESSOR,\n          multi: true,\n          useExisting: FileUploadComponent\n      },\n      {\n          provide: NG_VALIDATORS,\n          multi: true,\n          useExisting: FileUploadComponent\n      }\n  ]\n})\nexport class FileUploadComponent implements ControlValueAccessor, Validator {\n\n    @Input()\n    requiredFileType:string = 'jpg';\n\n    fileName = '';\n\n    fileUploadError = false;\n\n    fileUploadSuccess = false;\n\n    id = this.route.snapshot.params.id;\n\n\n    uploadProgress:number = 0;\n\n    onChange = (fileName:string) => {};\n\n    onTouched = () => {};\n\n    onValidatorChange = () => {};\n\n    disabled : boolean = false;\n\n    constructor( private route: ActivatedRoute, private router: Router, private http: HttpClient) {\n\n\n    }\n\n    onClick(fileUpload: HTMLInputElement) {\n        this.onTouched();\n        fileUpload.click();\n    }\n\n    onFileSelected(event:any) {\n\n        const file:File = event.target.files[0];\n\n        if (file) {\n\n            this.fileName = file.name;\n\n            const formData = new FormData();\n\n            formData.append(\"id\", this.id);\n            formData.append(\"thumbnail\", file);\n\n            this.fileUploadError = false;\n\n            this.http.post(\"http://localhost:8080/api/users/thumbnail-upload/\"+this.id, formData, {\n                reportProgress: true,\n                observe: 'events'\n            })\n            .pipe(\n                catchError(error => {\n                    this.fileUploadError = true;\n                    return of(error);\n                }),\n                finalize(() => {\n                    this.uploadProgress = 0;\n                })\n            )\n            .subscribe(event => {\n                if (event.type == HttpEventType.UploadProgress) {\n                    this.uploadProgress = Math.round(100 * (event.loaded / event.total));\n                }\n                else if (event.type == HttpEventType.Response) {\n                    this.fileUploadSuccess = true;\n                    this.onChange(this.fileName);\n                    this.onValidatorChange();\n                }\n            });\n\n\n\n        }\n\n    }\n\n    writeValue(value: any) {\n        this.fileName = value;\n    }\n\n    registerOnChange(onChange: any) {\n        this.onChange = onChange;\n    }\n\n    registerOnTouched(onTouched: any) {\n        this.onTouched = onTouched;\n    }\n\n    setDisabledState(disabled: boolean) {\n        this.disabled = disabled;\n    }\n\n    registerOnValidatorChange(onValidatorChange: () => void) {\n        this.onValidatorChange = onValidatorChange;\n    }\n\n    validate(control: AbstractControl): ValidationErrors | null {\n\n        if (this.fileUploadSuccess) {\n            return null;\n        }\n\n        let errors: any = {\n            requiredFileType: this.requiredFileType\n        };\n\n        if (this.fileUploadError) {\n            errors.uploadFailed = true;\n        }\n\n        return errors;\n    }\n\n\n\n\n}\n","\n<input type=\"file\" class=\"file-input\"\n       (change)=\"onFileSelected($event)\" #fileUpload>\n\n<div class=\"file-upload\">\n\n    <mat-form-field>\n\n        <input matInput [disabled]=\"true\" [value]=\"fileName\">\n\n    </mat-form-field>\n\n    <button mat-mini-fab color=\"primary\" class=\"upload-btn\"\n      (click)=\"onClick(fileUpload)\" [disabled]=\"disabled\">\n        <mat-icon>attach_file</mat-icon>\n\n    </button>\n\n</div>\n\n<mat-progress-bar class=\"progress-bar\" mode=\"determinate\"\n                  *ngIf=\"uploadProgress\"\n                  [value]=\"uploadProgress\">\n\n</mat-progress-bar>\n","import { Component, OnInit } from '@angular/core';\nimport { AppuserService } from '../../services/appuser.service';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n  content?: string;\n  isLoggedIn = false;\n\n  constructor(private appuserService: AppuserService) { }\n\n  ngOnInit(): void {\n        this.appuserService.getPublicContent().subscribe(\n          data => {\n            this.content = data;\n          },\n          err => {\n            this.content = JSON.parse(err.error).message;\n          }\n        );\n  }\n}\n","<div class=\"container\">\n  <header class=\"jumbotron\">\n    <p [innerHTML]=\"content\"></p>\n  </header>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from '../../services/auth.service';\nimport { TokenStorageService } from '../../services/token-storage.service';\nimport { ActivatedRoute, Router } from '@angular/router';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n  form: any = {\n    username: null,\n    password: null\n  };\n  isLoggedIn = false;\n  isLoginFailed = false;\n  errorMessage = '';\n  roles: string[] = [];\n\n  constructor(private authService: AuthService, private tokenStorage: TokenStorageService, private router: Router) { }\n\n  ngOnInit(): void {\n    if (this.tokenStorage.getToken()) {\n      this.isLoggedIn = true;\n      this.roles = this.tokenStorage.getAppuser().roles;\n      this.router.navigate(['users']);\n    }\n  }\n\n  onSubmit(): void {\n    const { username, password } = this.form;\n\n    this.authService.login(username, password).subscribe(\n      data => {\n        this.tokenStorage.saveToken(data.accessToken);\n        this.tokenStorage.saveAppuser(data);\n\n        this.isLoginFailed = false;\n        this.isLoggedIn = true;\n        this.roles = this.tokenStorage.getAppuser().roles;\n        this.reloadPage();\n      },\n      err => {\n        this.errorMessage = err.error.message;\n        this.isLoginFailed = true;\n      }\n    );\n  }\n\n  reloadPage(): void {\n    window.location.reload();\n  }\n}\n","<div class=\"col-md-12\">\n  <div class=\"card card-container\">\n    <img\n      id=\"profile-img\"\n      src=\"//ssl.gstatic.com/accounts/ui/avatar_2x.png\"\n      class=\"profile-img-card\"\n    />\n    <form\n      *ngIf=\"!isLoggedIn\"\n      name=\"form\"\n      (ngSubmit)=\"f.form.valid && onSubmit()\"\n      #f=\"ngForm\"\n      novalidate\n    >\n      <div class=\"form-group\">\n        <label for=\"username\">Username</label>\n        <input\n          type=\"text\"\n          class=\"form-control\"\n          name=\"username\"\n          [(ngModel)]=\"form.username\"\n          required\n          #username=\"ngModel\"\n        />\n        <div\n          class=\"alert alert-danger\"\n          role=\"alert\"\n          *ngIf=\"username.errors && f.submitted\"\n        >\n          Username is required!\n        </div>\n      </div>\n      <div class=\"form-group\">\n        <label for=\"password\">Password</label>\n        <input\n          type=\"password\"\n          class=\"form-control\"\n          name=\"password\"\n          [(ngModel)]=\"form.password\"\n          required\n          minlength=\"6\"\n          #password=\"ngModel\"\n        />\n        <div\n          class=\"alert alert-danger\"\n          role=\"alert\"\n          *ngIf=\"password.errors && f.submitted\"\n        >\n          <div *ngIf=\"password.errors.required\">Password is required</div>\n          <div *ngIf=\"password.errors.minlength\">\n            Password must be at least 6 characters\n          </div>\n        </div>\n      </div>\n      <div class=\"form-group\">\n        <button class=\"btn btn-primary btn-block\">\n          Login\n        </button>\n      </div>\n      <div class=\"form-group\">\n        <div\n          class=\"alert alert-danger\"\n          role=\"alert\"\n          *ngIf=\"f.submitted && isLoginFailed\"\n        >\n          Login failed: {{ errorMessage }}\n        </div>\n      </div>\n    </form>\n\n    <div class=\"alert alert-success\" *ngIf=\"isLoggedIn\">\n      Logged in as {{ roles }}.\n    </div>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { OrgService } from 'src/app/services/org.service';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Org } from 'src/app/models/org.model';\n\n@Component({\n  selector: 'app-org-details',\n  templateUrl: './org-details.component.html',\n  styleUrls: ['./org-details.component.css']\n})\nexport class OrgDetailsComponent implements OnInit {\n  currentOrg: Org = {\n    orgid: '',\n    orgname: '',\n    description: '',\n  };\n  message = '';\n\n  constructor(\n    private orgService: OrgService,\n    private route: ActivatedRoute,\n    private router: Router) { }\n\n  ngOnInit(): void {\n    this.message = '';\n    this.getOrg(this.route.snapshot.params.id);\n  }\n\n  getOrg(id: string): void {\n    this.orgService.get(id)\n      .subscribe(\n        data => {\n          this.currentOrg = data;\n          console.log(data);\n        },\n        error => {\n          console.log(error);\n        });\n  }\n\n  updateOrg(): void {\n    this.message = '';\n\n    this.orgService.update(this.currentOrg.id, this.currentOrg)\n      .subscribe(\n        response => {\n          console.log(response);\n          this.message = response.message ? response.message : 'This org was updated successfully!';\n        },\n        error => {\n          console.log(error);\n        });\n  }\n\n  deleteOrg(): void {\n    this.orgService.delete(this.currentOrg.id)\n      .subscribe(\n        response => {\n          console.log(response);\n          this.router.navigate(['/orgs']);\n        },\n        error => {\n          console.log(error);\n        });\n  }\n}\n","<div>\n  <div *ngIf=\"currentOrg.id\" class=\"edit-form\">\n    <h4>Org</h4>\n    <form>\n      <div class=\"form-group\">\n        <label for=\"orgid\">Organization Acronym</label>\n        <input\n          type=\"text\"\n          class=\"form-control\"\n          id=\"orgid\"\n          [(ngModel)]=\"currentOrg.orgid\"\n          name=\"orgid\"\n        />\n      </div>\n      <div class=\"form-group\">\n        <label for=\"orgname\">Org Name</label>\n        <input\n          type=\"text\"\n          class=\"form-control\"\n          id=\"orgname\"\n          [(ngModel)]=\"currentOrg.orgname\"\n          name=\"orgname\"\n        />\n      </div>\n      <div class=\"form-group\">\n        <label for=\"description\">Description</label>\n        <input\n          type=\"text\"\n          class=\"form-control\"\n          id=\"description\"\n          [(ngModel)]=\"currentOrg.description\"\n          name=\"description\"\n        />\n      </div>\n    </form>\n\n    <button class=\"badge badge-danger mr-2\" (click)=\"deleteOrg()\">\n      Delete\n    </button>\n\n    <button\n      type=\"submit\"\n      class=\"badge badge-success mb-2\"\n      (click)=\"updateOrg()\"\n    >\n      Update\n    </button>\n    <p>{{ message }}</p>\n  </div>\n\n  <div *ngIf=\"!currentOrg.id\">\n    <br />\n    <p>Cannot access this Organization...</p>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { Org } from 'src/app/models/org.model';\nimport { OrgService } from 'src/app/services/org.service';\n\n@Component({\n  selector: 'app-orgs-list',\n  templateUrl: './orgs-list.component.html',\n  styleUrls: ['./orgs-list.component.css']\n})\nexport class OrgsListComponent implements OnInit {\n  org?: Org[];\n  currentOrg?: Org;\n  currentIndex = -1;\n  orgname = '';\n\n  constructor(private orgService: OrgService) { }\n\n  ngOnInit(): void {\n    this.retrieveOrgs();\n  }\n\n  retrieveOrgs(): void {\n    this.orgService.getAll()\n      .subscribe(\n        data => {\n          this.org = data;\n          console.log(data);\n        },\n        error => {\n          console.log(error);\n        });\n  }\n\n  refreshList(): void {\n    this.retrieveOrgs();\n    this.currentOrg = undefined;\n    this.currentIndex = -1;\n  }\n\n  setActiveOrg(org: Org, index: number): void {\n    this.currentOrg = org;\n    this.currentIndex = index;\n  }\n\n  removeAllOrgs(): void {\n    this.orgService.deleteAll()\n      .subscribe(\n        response => {\n          console.log(response);\n          this.refreshList();\n        },\n        error => {\n          console.log(error);\n        });\n  }\n\n  searchOrgname(): void {\n    this.currentOrg = undefined;\n    this.currentIndex = -1;\n\n    this.orgService.findByOrgname(this.orgname)\n      .subscribe(\n        data => {\n          this.org = data;\n          console.log(data);\n        },\n        error => {\n          console.log(error);\n        });\n  }\n\n}\n","<div class=\"list row\">\n  <div class=\"col-md-8\">\n    <div class=\"input-group mb-3\">\n      <input\n        type=\"text\"\n        class=\"form-control\"\n        placeholder=\"Search by organization name\"\n        [(ngModel)]=\"orgname\"\n      />\n      <div class=\"input-group-append\">\n        <button\n          class=\"btn btn-outline-secondary\"\n          type=\"button\"\n          (click)=\"searchOrgname()\"\n        >\n          Search\n        </button>\n      </div>\n    </div>\n  </div>\n  <div class=\"col-md-6\">\n    <h4>Organization List</h4>\n    <ul class=\"list-group\">\n      <li\n        class=\"list-group-item\"\n        *ngFor=\"let org of org; let i = index\"\n        [class.active]=\"i == currentIndex\"\n        (click)=\"setActiveOrg(org, i)\"\n      >\n        {{ org.orgname }}\n      </li>\n    </ul>\n\n    <button class=\"m-3 btn btn-sm btn-danger\" (click)=\"removeAllOrgs()\">\n      Remove All Organizations\n    </button>\n  </div>\n  <div class=\"col-md-6\">\n    <div *ngIf=\"currentOrg\">\n      <h4>Organization</h4>\n      <div>\n        <label><strong>Organization Id:</strong></label> {{ currentOrg.orgid }}\n      </div>\n      <div>\n        <label><strong>Organization Name:</strong></label> {{ currentOrg.orgname }}\n      </div>\n      <div>\n        <label><strong>Description:</strong></label>\n        {{ currentOrg.description }}\n      </div>\n\n      <a class=\"badge badge-warning\" routerLink=\"/orgs/{{ currentOrg.id }}\">\n        Edit\n      </a>\n    </div>\n\n    <div *ngIf=\"!currentOrg\">\n      <br />\n      <p>Please click on an organization...</p>\n    </div>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { TokenStorageService } from '../../services/token-storage.service';\n\n@Component({\n  selector: 'app-profile',\n  templateUrl: './profile.component.html',\n  styleUrls: ['./profile.component.css']\n})\nexport class ProfileComponent implements OnInit {\n  currentUser: any;\n\n  constructor(private token: TokenStorageService) { }\n\n  ngOnInit(): void {\n    this.currentUser = this.token.getAppuser();\n  }\n}\n","<div class=\"container\" *ngIf=\"currentUser; else loggedOut\">\n  <header class=\"jumbotron\">\n    <h3>\n      <strong>{{ currentUser.username }}</strong> Profile\n    </h3>\n  </header>\n  <p>\n    <strong>Token:</strong>\n    {{ currentUser.accessToken.substring(0, 20) }} ...\n    {{ currentUser.accessToken.substr(currentUser.accessToken.length - 20) }}\n  </p>\n  <p>\n    <strong>Email:</strong>\n    {{ currentUser.email }}\n  </p>\n  <strong>Roles:</strong>\n  <ul>\n    <li *ngFor=\"let role of currentUser.roles\">\n      {{ role }}\n    </li>\n  </ul>\n</div>\n\n<ng-template #loggedOut>\n  Please login.\n</ng-template>\n","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from '../../services/auth.service';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})\nexport class RegisterComponent implements OnInit {\n  form: any = {\n    username: null,\n    email: null,\n    password: null\n  };\n  isSuccessful = false;\n  isSignUpFailed = false;\n  errorMessage = '';\n\n  constructor(private authService: AuthService) { }\n\n  ngOnInit(): void {\n  }\n\n  onSubmit(): void {\n    const { username, email, password } = this.form;\n\n    this.authService.register(username, email, password).subscribe(\n      data => {\n        console.log(data);\n        this.isSuccessful = true;\n        this.isSignUpFailed = false;\n      },\n      err => {\n        this.errorMessage = err.error.message;\n        this.isSignUpFailed = true;\n      }\n    );\n  }\n}\n","<div class=\"col-md-12\">\n  <div class=\"card card-container\">\n    <img\n      id=\"profile-img\"\n      src=\"//ssl.gstatic.com/accounts/ui/avatar_2x.png\"\n      class=\"profile-img-card\"\n    />\n    <form\n      *ngIf=\"!isSuccessful\"\n      name=\"form\"\n      (ngSubmit)=\"f.form.valid && onSubmit()\"\n      #f=\"ngForm\"\n      novalidate\n    >\n      <div class=\"form-group\">\n        <label for=\"username\">Username</label>\n        <input\n          type=\"text\"\n          class=\"form-control\"\n          name=\"username\"\n          [(ngModel)]=\"form.username\"\n          required\n          minlength=\"3\"\n          maxlength=\"20\"\n          #username=\"ngModel\"\n        />\n        <div class=\"alert-danger\" *ngIf=\"username.errors && f.submitted\">\n          <div *ngIf=\"username.errors.required\">Username is required</div>\n          <div *ngIf=\"username.errors.minlength\">\n            Username must be at least 3 characters\n          </div>\n          <div *ngIf=\"username.errors.maxlength\">\n            Username must be at most 20 characters\n          </div>\n        </div>\n      </div>\n      <div class=\"form-group\">\n        <label for=\"email\">Email</label>\n        <input\n          type=\"email\"\n          class=\"form-control\"\n          name=\"email\"\n          [(ngModel)]=\"form.email\"\n          required\n          email\n          #email=\"ngModel\"\n        />\n        <div class=\"alert-danger\" *ngIf=\"email.errors && f.submitted\">\n          <div *ngIf=\"email.errors.required\">Email is required</div>\n          <div *ngIf=\"email.errors.email\">\n            Email must be a valid email address\n          </div>\n        </div>\n      </div>\n      <div class=\"form-group\">\n        <label for=\"password\">Password</label>\n        <input\n          type=\"password\"\n          class=\"form-control\"\n          name=\"password\"\n          [(ngModel)]=\"form.password\"\n          required\n          minlength=\"6\"\n          #password=\"ngModel\"\n        />\n        <div class=\"alert-danger\" *ngIf=\"password.errors && f.submitted\">\n          <div *ngIf=\"password.errors.required\">Password is required</div>\n          <div *ngIf=\"password.errors.minlength\">\n            Password must be at least 6 characters\n          </div>\n        </div>\n      </div>\n      <div class=\"form-group\">\n        <button class=\"btn btn-primary btn-block\">Sign Up</button>\n      </div>\n\n      <div class=\"alert alert-warning\" *ngIf=\"f.submitted && isSignUpFailed\">\n        Signup failed!<br />{{ errorMessage }}\n      </div>\n    </form>\n\n    <div class=\"alert alert-success\" *ngIf=\"isSuccessful\">\n      Your registration is successful!\n    </div>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { UserService } from 'src/app/services/user.service';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { User } from 'src/app/models/user.model';\nimport { OrgService } from 'src/app/services/org.service';\nimport { Org } from '../../models/org.model';\nimport { TokenStorageService } from 'src/app/services/token-storage.service';\n\n@Component({\n  selector: 'app-user-details',\n  templateUrl: './user-details.component.html',\n  styleUrls: ['./user-details.component.css']\n})\nexport class UserDetailsComponent implements OnInit {\n  currentUser: User = {\n    username: '',\n    title: '',\n    description: '',\n    image: '' \n  };\n  org: Org[] = [];\n  message = '';\n  private roles: string[] = [];\n  isLoggedIn = false;\n  showModUser = false;\n  showModButtons = false;\n  appusername?: string;\n  b64 = '';\n\n\n\n  constructor(\n    private userService: UserService,\n    private orgService: OrgService,\n    private tokenStorageService: TokenStorageService,\n    private route: ActivatedRoute,\n    private router: Router) { }\n\n  ngOnInit(): void {\n    this.isLoggedIn = !!this.tokenStorageService.getToken();\n\n    if (this.isLoggedIn) {\n      const appuser = this.tokenStorageService.getAppuser();\n      this.getUser(this.route.snapshot.params.id);\n      this.roles = appuser.roles;\n      this.showModUser = this.roles.includes('ROLE_ADMIN');\n      this.appusername = appuser.username;\n      /* The statement below will not work because it is an asynchronous call\n      if (this.appusername == this.currentUser.username)\n      {\n        this.showModButtons = true;\n      }\n      console.log('currentUser.id='+this.currentUser.id);\n      console.log('appuser='+JSON.stringify(appuser));\n      console.log('currentUser='+JSON.stringify(this.currentUser));\n      console.log('this.appusername='+this.appusername);\n      console.log('this.currentUser.username='+this.currentUser.username);\n      console.log('showModUser='+this.showModUser);\n      console.log('showModButtons='+this.showModButtons);\n      */\n      this.retrieveOrgs();\n    }\n    this.message = '';\n    this.retrieveOrgs();\n  }\n\n  getUser(id: string): void {\n    this.userService.get(id)\n      .subscribe(\n        data => {\n          this.currentUser = data;\n          console.log(\"getUser for \"+id+\"=\"+JSON.stringify(data));\n        },\n        error => {\n          console.log(error);\n        });\n  }\n\n  updateUser(): void {\n    this.message = '';\n\n    this.userService.update(this.currentUser.id, this.currentUser)\n      .subscribe(\n        response => {\n          console.log(response);\n          this.message = response.message ? response.message : 'This user was updated successfully!';\n        },\n        error => {\n          console.log(error);\n        });\n  }\n\n  deleteUser(): void {\n    this.userService.delete(this.currentUser.id)\n      .subscribe(\n        response => {\n          console.log(response);\n          this.router.navigate(['/users']);\n        },\n        error => {\n          console.log(error);\n        });\n  }\n\n  retrieveOrgs(): void {\n    this.orgService.getAll()\n      .subscribe(\n        data=> {\n          this.org = data;\n          console.log(this.org);\n        },\n        error => {\n          console.log(error);\n        });\n  }\n}\n","<div>\n  <div *ngIf=\"currentUser.id && ((appusername == currentUser.username ) || showModUser)\" class=\"edit-form\">\n    <h4>User</h4>\n    <form>\n      <div class=\"form-group\">\n        <label for=\"username\">User Name</label>\n        <input\n          type=\"text\"\n          class=\"form-control\"\n          id=\"username\"\n          [(ngModel)]=\"currentUser.username\"\n          name=\"username\"\n        />\n      </div>\n      <div class=\"form-group\">\n        <label for=\"firstname\">First Name</label>\n        <input\n          type=\"text\"\n          class=\"form-control\"\n          id=\"firstname\"\n          [(ngModel)]=\"currentUser.firstname\"\n          name=\"firstname\"\n        />\n      </div>\n      <div class=\"form-group\">\n        <label for=\"lastname\">Last Name</label>\n        <input\n          type=\"text\"\n          class=\"form-control\"\n          id=\"lastname\"\n          [(ngModel)]=\"currentUser.lastname\"\n          name=\"lastname\"\n        />\n      </div>\n      <div class=\"form-group\">\n        <label for=\"title\">Title</label>\n        <input\n          type=\"text\"\n          class=\"form-control\"\n          id=\"title\"\n          [(ngModel)]=\"currentUser.title\"\n          name=\"title\"\n        />\n      </div>\n      <div class=\"form-group\">\n        <label for=\"description\">Description</label>\n        <input\n          type=\"text\"\n          class=\"form-control\"\n          id=\"description\"\n          [(ngModel)]=\"currentUser.description\"\n          name=\"description\"\n        />\n      </div>\n      <div class=\"form-group\">\n        <label for=\"org\">Organization Name</label>\n          <select class=\"form-control\" id=\"organization\" [(ngModel)]=\"currentUser.organization\" name=\"organization\">\n            <option *ngFor=\"let orgs of org; let i = index\" [value]=\"org[i].id\">\n             {{org[i].orgname}}\n            </option>\n          </select>\n      </div>\n    </form>\n    <img src=\"data:image/jpeg;base64,{{currentUser.image}}\"/>\n    <app-file-upload></app-file-upload>\n      <!--<div class=\"form-group\">\n        <label for=\"organization\">Organization</label>\n        <input\n          type=\"text\"\n          class=\"form-control\"\n          id=\"organization\"\n          [(ngModel)]=\"currentUser.organization\"\n          name=\"organization\"\n        />\n      </div>-->\n\n    <button *ngIf=\"showModUser\" class=\"badge badge-danger mr-2\" (click)=\"deleteUser()\">\n      Delete\n    </button>\n\n    <button\n      type=\"submit\"\n      class=\"badge badge-success mb-2\"\n      (click)=\"updateUser()\"\n    >\n      Update\n    </button>\n    <p>{{ message }}</p>\n  </div>\n\n  <div *ngIf=\"!currentUser.id\">\n    <br />\n    <p>Cannot access this User...</p>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { User } from 'src/app/models/user.model';\nimport { UserService } from 'src/app/services/user.service';\nimport { OrgService } from 'src/app/services/org.service';\nimport { Org } from '../../models/org.model';\nimport { TokenStorageService } from 'src/app/services/token-storage.service';\n\n@Component({\n  selector: 'app-users-list',\n  templateUrl: './users-list.component.html',\n  styleUrls: ['./users-list.component.css']\n})\nexport class UsersListComponent implements OnInit {\n  user?: User[];\n  org: Org[] = [];\n  currentUser?: User;\n  currentIndex = -1;\n  username = '';\n  private roles: string[] = [];\n  isLoggedIn = false;\n  showEdit = false;\n  appusername?: string;\n\n  constructor(private userService: UserService, private orgService: OrgService,private tokenStorageService: TokenStorageService) { }\n\n  ngOnInit(): void {\n    this.isLoggedIn = !!this.tokenStorageService.getToken();\n\n    if (this.isLoggedIn) {\n      const appuser = this.tokenStorageService.getAppuser();\n      this.roles = appuser.roles;\n      this.showEdit = this.roles.includes('ROLE_ADMIN');\n      this.appusername = appuser.username;\n    }\n    this.retrieveUsers();\n    this.retrieveOrgs();\n  }\n\n  retrieveUsers(): void {\n    this.userService.getAll()\n      .subscribe(\n        data => {\n          this.user = data;\n          console.log(data);\n        },\n        error => {\n          console.log(error);\n        });\n  }\n\n  refreshList(): void {\n    this.retrieveUsers();\n    this.currentUser = undefined;\n    this.currentIndex = -1;\n  }\n\n  setActiveUser(user: User, index: number): void {\n    this.currentUser = user;\n    this.currentIndex = index;\n  }\n\n  removeAllUsers(): void {\n    this.userService.deleteAll()\n      .subscribe(\n        response => {\n          console.log(response);\n          this.refreshList();\n        },\n        error => {\n          console.log(error);\n        });\n  }\n\n  searchUsername(): void {\n    this.currentUser = undefined;\n    this.currentIndex = -1;\n\n    this.userService.findByUsername(this.username)\n      .subscribe(\n        data => {\n          this.user = data;\n\n          console.log(data);\n        },\n        error => {\n          console.log(error);\n        });\n  }\n\n  retrieveOrgs(): void {\n    this.orgService.getAll()\n      .subscribe(\n        data=> {\n          this.org = data;\n          console.log(this.org);\n        },\n        error => {\n          console.log(error);\n        });\n  }\n\n}\n","<div class=\"list row\">\n  <div class=\"col-md-8\">\n    <div class=\"input-group mb-3\">\n      <input\n        type=\"text\"\n        class=\"form-control\"\n        placeholder=\"Search by username\"\n        [(ngModel)]=\"username\"\n      />\n      <div class=\"input-group-append\">\n        <button\n          class=\"btn btn-outline-secondary\"\n          type=\"button\"\n          (click)=\"searchUsername()\"\n        >\n          Search\n        </button>\n      </div>\n    </div>\n  </div>\n  <div class=\"col-md-6\">\n    <h4>User List</h4>\n    <ul class=\"list-group\">\n      <li\n        class=\"list-group-item\"\n        *ngFor=\"let user of user; let i = index\"\n        [class.active]=\"i == currentIndex\"\n        (click)=\"setActiveUser(user, i)\"\n      >\n        {{ user.username }}\n      </li>\n    </ul>\n\n    <button *ngIf=\"showEdit\" class=\"m-3 btn btn-sm btn-danger\" (click)=\"removeAllUsers()\">\n      Remove All Users\n    </button>\n  </div>\n  <div class=\"col-md-6\">\n    <div *ngIf=\"currentUser\">\n      <h4>User</h4>\n      <div>\n        <label><strong>User Name:</strong></label> {{ currentUser.username }}\n      </div>\n      <div>\n        <label><strong>First Name:</strong></label> {{ currentUser.firstname }}\n      </div>\n      <div>\n        <label><strong>Last Name:</strong></label> {{ currentUser.lastname }}\n      </div>\n      <div>\n        <label><strong>Title:</strong></label> {{ currentUser.title }}\n      </div>\n      <div>\n        <label><strong>Description:</strong></label>\n        {{ currentUser.description }}\n      </div>\n      <div *ngIf=\"currentUser.organization\">\n        <label><strong>Organization ID:</strong></label>\n        {{ currentUser.organization}}\n        <label><strong>Organization:</strong></label>\n        {{ org[currentUser.organization-1].orgid }}\n      </div>\n\n      <a *ngIf=\"currentUser.username == appusername || showEdit\" class=\"badge badge-warning\" routerLink=\"/users/{{ currentUser.id }}\">\n        Edit\n      </a>\n\n    <div *ngIf=\"!currentUser\">\n      <br />\n      <p>Please click on a User...</p>\n    </div>\n  </div>\n</div>\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\nconst API_URL = 'http://localhost:8080/api/test/';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AppuserService {\n  constructor(private http: HttpClient) { }\n\n  getPublicContent(): Observable<any> {\n    return this.http.get(API_URL + 'all', { responseType: 'text' });\n  }\n\n  getUserBoard(): Observable<any> {\n    return this.http.get(API_URL + 'user', { responseType: 'text' });\n  }\n\n  getModeratorBoard(): Observable<any> {\n    return this.http.get(API_URL + 'mod', { responseType: 'text' });\n  }\n\n  getAdminBoard(): Observable<any> {\n    return this.http.get(API_URL + 'admin', { responseType: 'text' });\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\nconst AUTH_API = 'http://localhost:8080/api/auth/';\n\nconst httpOptions = {\n  headers: new HttpHeaders({ 'Content-Type': 'application/json' })\n};\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n  constructor(private http: HttpClient) { }\n\n  login(username: string, password: string): Observable<any> {\n    return this.http.post(AUTH_API + 'signin', {\n      username,\n      password\n    }, httpOptions);\n  }\n\n  register(username: string, email: string, password: string): Observable<any> {\n    return this.http.post(AUTH_API + 'signup', {\n      username,\n      email,\n      password\n    }, httpOptions);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { Org } from '../models/org.model';\n\nconst baseUrl = 'http://localhost:8080/api/orgs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class OrgService {\n\n  constructor(private http: HttpClient) { }\n\n  getAll(): Observable<Org[]> {\n    return this.http.get<Org[]>(baseUrl);\n  }\n\n  get(id: any): Observable<Org> {\n    return this.http.get(`${baseUrl}/${id}`);\n  }\n\n  create(data: any): Observable<any> {\n    return this.http.post(baseUrl, data);\n  }\n\n  update(id: any, data: any): Observable<any> {\n    return this.http.put(`${baseUrl}/${id}`, data);\n  }\n\n  delete(id: any): Observable<any> {\n    return this.http.delete(`${baseUrl}/${id}`);\n  }\n\n  deleteAll(): Observable<any> {\n    return this.http.delete(baseUrl);\n  }\n\n  findById(id: any): Observable<Org[]> {\n    return this.http.get<Org[]>(`${baseUrl}?id=${id}`);\n  }\n  findByOrgname(orgname: any): Observable<Org[]> {\n    return this.http.get<Org[]>(`${baseUrl}?orgname=${orgname}`);\n  }\n}\n","import { Injectable } from '@angular/core';\n\nconst TOKEN_KEY = 'auth-token';\nconst USER_KEY = 'auth-user';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TokenStorageService {\n  constructor() { }\n\n  signOut(): void {\n    window.sessionStorage.clear();\n  }\n\n  public saveToken(token: string): void {\n    window.sessionStorage.removeItem(TOKEN_KEY);\n    window.sessionStorage.setItem(TOKEN_KEY, token);\n  }\n\n  public getToken(): string | null {\n    return window.sessionStorage.getItem(TOKEN_KEY);\n  }\n\n  public saveAppuser(appuser: any): void {\n    window.sessionStorage.removeItem(USER_KEY);\n    window.sessionStorage.setItem(USER_KEY, JSON.stringify(appuser));\n  }\n\n  public getAppuser(): any {\n    const appuser = window.sessionStorage.getItem(USER_KEY);\n    if (appuser) {\n      return JSON.parse(appuser);\n    }\n\n    return {};\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { User } from '../models/user.model';\n\nconst baseUrl = 'http://localhost:8080/api/users';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserService {\n\n  constructor(private http: HttpClient) { }\n\n  getAll(): Observable<User[]> {\n    return this.http.get<User[]>(baseUrl);\n  }\n\n  get(id: any): Observable<User> {\n    return this.http.get(`${baseUrl}/${id}`);\n  }\n\n  create(data: any): Observable<any> {\n    return this.http.post(baseUrl, data);\n  }\n\n  update(id: any, data: any): Observable<any> {\n    return this.http.put(`${baseUrl}/${id}`, data);\n  }\n\n  delete(id: any): Observable<any> {\n    return this.http.delete(`${baseUrl}/${id}`);\n  }\n\n  deleteAll(): Observable<any> {\n    return this.http.delete(baseUrl);\n  }\n\n  findById(id: any): Observable<User[]> {\n    return this.http.get<User[]>(`${baseUrl}?id=${id}`);\n  }\n  findByUsername(username: any): Observable<User[]> {\n    return this.http.get<User[]>(`${baseUrl}?username=${username}`);\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/plugins/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"names":[],"sourceRoot":"webpack:///"}